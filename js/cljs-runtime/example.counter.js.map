{"version":3,"sources":["example/counter.cljs"],"mappings":"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","names":["example.counter/reagent-atom-counter","state","reagent.core.atom","cljs.core/deref","cljs.core.swap_BANG_","cljs.core/update-in","cljs.core/inc","devcards.core/register-card","devcards.core/card-base","js/example","js/example.counter","js/example.counter.t_example$counter23672","example.counter/t_example$counter23672","_23674","meta23673","cljs.core/PROTOCOL_SENTINEL","this__17465__auto__","devcard-opts__17466__auto__","cljs.core.assoc","v__17484__auto__","cljs.core/fn?","data-atom__17485__auto__","owner__17486__auto__","reagent.core.as_element","cljs.core.merge","devcards.core/assert-options-map","this__4369__auto__","writer__4370__auto__","opt__4371__auto__","cljs.core/-write","example.counter/->t_example$counter23672","devcards.core.markdown__GT_react","example.counter/lmr-count","conn","homebase.reagent/q","example.counter/lmr-inc-button","homebase.reagent/transact!","example.counter/lmr-counter","homebase.reagent/new-db-conn","js/example.counter.t_example$counter23678","example.counter/t_example$counter23678","_23680","meta23679","example.counter/->t_example$counter23678","js/example.counter.t_example$counter23681","example.counter/t_example$counter23681","_23683","meta23682","example.counter/->t_example$counter23681","js/module$js_gen$counter_example.App","example.counter/code-snippet"],"sourcesContent":["(ns example.counter\n  (:require \n   [devcards.core :as dc]\n   [reagent.core :as r]\n   [homebase.reagent :as lmr]\n   [homebase.react]\n   [\"../js_gen/counter-example\" :as react-example])\n  (:require-macros\n   [devcards.core :refer [defcard defcard-rg defcard-doc]]\n   [dev.macros :refer [inline-resource]]))\n\n(defn reagent-atom-counter []\n  (let [state (r/atom {:count 0})]\n    (fn []\n      [:div \"Count: \" (:count @state)\n       [:div\n        [:button {:on-click #(swap! state update-in [:count] inc)}\n         \"Increment\"]]])))\n\n(defcard-rg reagent-atom-counter\n  [reagent-atom-counter])\n\n(defcard-doc\n  (dc/mkdn-pprint-source reagent-atom-counter))\n\n\n(defn lmr-count [conn]\n  [:<> \"Count: \" (:count (lmr/q 1 conn))])\n\n(defn lmr-inc-button [conn]\n  [:button {:on-click #(lmr/transact! conn [[:db/add 1 :count (inc (:count (lmr/q 1 conn)))]])}\n   \"Increment\"])\n\n(defn lmr-counter []\n  (let [conn (lmr/new-db-conn [{:db/id 1, :count 0}])]\n    (fn []\n      [:div [lmr-count conn]\n       [:div [lmr-inc-button conn]]])))\n\n(defcard-rg reagent-homebase-counter\n  [lmr-counter])\n\n(defcard-doc\n  (dc/mkdn-pprint-source lmr-count)\n  (dc/mkdn-pprint-source lmr-inc-button)\n  (dc/mkdn-pprint-source lmr-counter))\n\n\n(defcard-rg react-js-homebase-counter\n  [react-example/App])\n\n(def code-snippet (inline-resource \"js/counter-example.jsx\"))\n(defcard-doc\n  (str \"```javascript\\n\" code-snippet \"\\n```\"))\n\n"]}