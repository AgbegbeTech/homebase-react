{"version":3,"sources":["example/counter.cljs"],"mappings":"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","names":["example.counter/reagent-atom-counter","state","reagent.core.atom","cljs.core/deref","cljs.core.swap_BANG_","cljs.core/update-in","cljs.core/inc","devcards.core/register-card","devcards.core/card-base","js/example","js/example.counter","js/example.counter.t_example$counter23627","example.counter/t_example$counter23627","_23629","meta23628","cljs.core/PROTOCOL_SENTINEL","this__17465__auto__","devcard-opts__17466__auto__","cljs.core.assoc","v__17484__auto__","cljs.core/fn?","data-atom__17485__auto__","owner__17486__auto__","reagent.core.as_element","cljs.core.merge","devcards.core/assert-options-map","this__4369__auto__","writer__4370__auto__","opt__4371__auto__","cljs.core/-write","example.counter/->t_example$counter23627","example.counter/lmr-count","conn","localmost.reagent/q","example.counter/lmr-inc-button","localmost.reagent/transact!","example.counter/lmr-counter","localmost.reagent/new-db-conn","js/example.counter.t_example$counter23632","example.counter/t_example$counter23632","_23634","meta23633","example.counter/->t_example$counter23632","js/example.counter.t_example$counter23635","example.counter/t_example$counter23635","_23637","meta23636","example.counter/->t_example$counter23635","js/module$js_gen$counter_example.App"],"sourcesContent":["(ns example.counter\n  (:require \n   [reagent.core :as r]\n   [localmost.reagent :as lmr]\n   [localmost.react]\n   [\"../js_gen/counter-example\" :as react-example])\n  (:require-macros \n   [devcards.core :refer [defcard defcard-rg]]))\n\n(defn reagent-atom-counter []\n  (let [state (r/atom {:count 0})]\n    (fn []\n      [:div \"reagent.core/atom count: \" (:count @state)\n       [:div\n        [:button {:on-click #(swap! state update-in [:count] inc)}\n         \"Increment\"]]])))\n\n(defcard-rg reagent-atom-counter\n  [reagent-atom-counter])\n\n\n(defn lmr-count [conn]\n  [:<> \"localmost.reagent count: \" (:count (lmr/q 1 conn))])\n\n(defn lmr-inc-button [conn]\n  [:button {:on-click #(lmr/transact! conn [[:db/add 1 :count (inc (:count (lmr/q 1 conn)))]])}\n   \"Increment\"])\n\n(defn lmr-counter []\n  (let [conn (lmr/new-db-conn [{:db/id 1, :count 0}])]\n    (fn []\n      [:div [lmr-count conn]\n       [:div [lmr-inc-button conn]]])))\n\n(defcard-rg reagent-localmost-counter\n  [lmr-counter])\n\n\n(defcard-rg react-js-localmost-counter\n  [react-example/App])\n\n"]}